/* Generated by Together */

package agent.behaviour;

import agent.AgentImp;

/**
 * This type of Behaviour is to be used with the LTD synchronized agent
 * AgentImp is LTD synchronized
 */
public abstract class LTDBehaviour extends Behaviour {

    /**
     * Implements the general Behaviour.handle method
     * see superclass
     * For the LTD sheme behaviours, this method does communication if in
     * communication phase and then directly responds to any messages it
     * may have received.
     * In action phase it triggers the actions of this behaviour.
     */
    public void handle(AgentImp agent) {
        super.handle(agent);
        if (hasHandled()) {
            return;
        }
        if (agent.inCommPhase()) {
            communicate(agent);
            agent.closeCommunication();
        } else if (agent.inActionPhase()) {
            act(agent);
        }
    }

    /**
     * This method handles the actions of the behaviour that are action related
     */
    public abstract void act(AgentImp agent);

    /**
     * This method handles the actions of the behaviour that are communication
     * related. This does not include answering messages, only sending them.
     */
    public abstract void communicate(AgentImp agent);
}
